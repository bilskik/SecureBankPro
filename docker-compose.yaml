#version: "3.0"
#
#services:
#  mysql:
#    image: mysql
#    container_name: mysql
##    command: --default-authentication-plugin=mysql_native_password
#    environment:
#      - MYSQL_ROOT_PASSWORD=password
#      - MYSQL_DATABASE=bankdb
#      - MYSQL_USER=user
#      - MYSQL_PASSWORD=password
#    ports:
#      - '3307:3306'
#    networks:
#      - sbp
#  redis:
#    container_name: redis
#    image: redis
#    ports:
#      - "6379:6379"
#    networks:
#      - sbp
#  backend:
#    container_name: backend
#    image: backend
##    networks:
##      - sbp
#    depends_on:
#      - mysql
#      - redis
##    build:
##      context: backend
##      dockerfile: Dockerfile
#    restart: on-failure
#    ports:
#      - "8080:8080"
#networks:
#  sbp:

version: "3.8"

services:
  postgres:
    container_name: postgresdb
    image: postgres
    environment:
      - 'POSTGRES_DB=bank'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_USER=user'
    ports:
      - "5432:5432"
    networks:
      - springboot-mysql-net
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    networks:
      - springboot-mysql-net
  app:
    container_name: app
    image: backend
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - springboot-mysql-net
#    restart: on-failure
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - app
    networks:
      - springboot-mysql-net
networks:
  springboot-mysql-net: